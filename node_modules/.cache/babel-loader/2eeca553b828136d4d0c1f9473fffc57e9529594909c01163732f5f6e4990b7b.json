{"ast":null,"code":"var _jsxFileName = \"/Users/DevHassan/OneDrive/StudyMeterial/MyCodeWorld/VSCode/teamportfolio/src/components/experienceCard/ExperienceCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createRef } from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DescriptionBullets = _ref => {\n  let {\n    descBullets,\n    isDark\n  } = _ref;\n  return descBullets ? descBullets.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isDark ? \"subTitle dark-mode-text\" : \"subTitle\",\n    children: item\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this)) : null;\n};\n_c = DescriptionBullets;\nconst DescriptionText = _ref2 => {\n  let {\n    description,\n    isDark\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: isDark ? \"subTitle experience-text-desc dark-mode-text\" : \"subTitle experience-text-desc\",\n    children: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DescriptionText;\nexport default function ExperienceCard(_ref3) {\n  _s();\n  let {\n    experienceInfo,\n    isDarkMode\n  } = _ref3;\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = /*#__PURE__*/createRef();\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n  function rgb(values) {\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(\", \") + \")\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDarkMode ? \"experience-card-dark\" : \"experience-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: rgb(colorArrays)\n      },\n      className: \"experience-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"experience-blurred-div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"experience-company-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"experience-company-name\",\n          children: experienceInfo.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        crossOrigin: \"anonymous\",\n        ref: imgRef,\n        className: \"experience-rounded-img\",\n        src: experienceInfo.companyLogo,\n        alt: experienceInfo.company,\n        onLoad: () => getColorArrays()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: isDarkMode ? \"experience-role dark-mode-text\" : \"experience-role\",\n        children: experienceInfo.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: isDarkMode ? \"experience-date dark-mode-text\" : \"experience-date\",\n        children: experienceInfo.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), experienceInfo.descriptions.map((desc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DescriptionText, {\n          description: desc.text,\n          isDark: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(DescriptionBullets, {\n            descBullets: desc.bullets,\n            isDark: isDarkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ExperienceCard, \"FTCwGyfCv3t8RXQlQ0o5KDZgYIU=\");\n_c3 = ExperienceCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DescriptionBullets\");\n$RefreshReg$(_c2, \"DescriptionText\");\n$RefreshReg$(_c3, \"ExperienceCard\");","map":{"version":3,"names":["React","useState","createRef","ColorThief","jsxDEV","_jsxDEV","DescriptionBullets","_ref","descBullets","isDark","map","item","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DescriptionText","_ref2","description","_c2","ExperienceCard","_ref3","_s","experienceInfo","isDarkMode","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","style","background","company","crossOrigin","ref","src","companyLogo","alt","onLoad","role","date","descriptions","desc","index","text","bullets","_c3","$RefreshReg$"],"sources":["/Users/DevHassan/OneDrive/StudyMeterial/MyCodeWorld/VSCode/teamportfolio/src/components/experienceCard/ExperienceCard.js"],"sourcesContent":["import React, { useState, createRef } from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\n\nconst DescriptionBullets = ({ descBullets, isDark }) => {\n  return descBullets\n    ? descBullets.map((item, i) => (\n        <li key={i} className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}>\n          {item}\n        </li>\n      ))\n    : null;\n};\n\nconst DescriptionText = ({ description, isDark }) => {\n  return (\n    <p className={isDark ? \"subTitle experience-text-desc dark-mode-text\" : \"subTitle experience-text-desc\"}>\n      {description}\n    </p>\n  );\n};\n\nexport default function ExperienceCard({ experienceInfo, isDarkMode }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  return (\n    <div className={isDarkMode ? \"experience-card-dark\" : \"experience-card\"}>\n      <div style={{ background: rgb(colorArrays) }} className=\"experience-banner\">\n        <div className=\"experience-blurred-div\"></div>\n        <div className=\"experience-company-info\">\n          <h5 className=\"experience-company-name\">{experienceInfo.company}</h5>\n        </div>\n\n        <img\n          crossOrigin={\"anonymous\"}\n          ref={imgRef}\n          className=\"experience-rounded-img\"\n          src={experienceInfo.companyLogo}\n          alt={experienceInfo.company}\n          onLoad={() => getColorArrays()}\n        />\n      </div>\n      <div className=\"experience-details\">\n        <h5 className={isDarkMode ? \"experience-role dark-mode-text\" : \"experience-role\"}>\n          {experienceInfo.role}\n        </h5>\n        <h5 className={isDarkMode ? \"experience-date dark-mode-text\" : \"experience-date\"}>\n          {experienceInfo.date}\n        </h5>\n\n        {experienceInfo.descriptions.map((desc, index) => (\n          <div key={index}>\n            <DescriptionText description={desc.text} isDark={isDarkMode} />\n            <ul>\n              <DescriptionBullets descBullets={desc.bullets} isDark={isDarkMode} />\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}